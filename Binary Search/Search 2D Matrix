// O(log(n)) time | O(1) space

class Solution {

    searchMatrix(matrix, target) {
        const ROWS = matrix.length;
        const COLS = matrix[0].length;

        let top = 0;
        let bot = ROWS - 1;
        while (top <= bot) {
            const row = Math.floor((top + bot) / 2);

            if (target > matrix[row][COLS - 1]) {
                top = row + 1;
            }

            else if (target < matrix[row][0]) {
                bot = row - 1;
            } 

            else {
                break;
            }
        }

        if (!(top <= bot)) {
            return false;
        }

        const row = Math.floor((top + bot) / 2);

        let left = 0;
        let right = COLS - 1;
        while (left <= right) {
            const middle = Math.floor((left + right) / 2);

            if (target > matrix[row][middle]) {
                left = middle + 1;
            }

            else if (target < matrix[row][middle]) {
                right = middle - 1;
            }
            
            else {
                return true;
            }
        }

        return false;
    }
}
